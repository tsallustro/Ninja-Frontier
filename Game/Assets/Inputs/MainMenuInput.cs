//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/Inputs/MainMenuInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainMenuInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainMenuInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainMenuInput"",
    ""maps"": [
        {
            ""name"": ""MenuInput"",
            ""id"": ""24812fdb-3b08-423b-8045-fda188c2e641"",
            ""actions"": [
                {
                    ""name"": ""ScrollDown"",
                    ""type"": ""Button"",
                    ""id"": ""3a1da149-f36b-4ae8-ae64-988376265ab0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollLeft"",
                    ""type"": ""Button"",
                    ""id"": ""e81f857d-6df1-4c29-a1eb-9a6af48516a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollUp"",
                    ""type"": ""Button"",
                    ""id"": ""0bf0a86c-ced7-4ce6-9746-c96beda90175"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollRight"",
                    ""type"": ""Button"",
                    ""id"": ""c06eb7b4-3998-4e1d-b263-b6351b468f8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""e82fa2ed-959f-4dc7-bfc6-f782079cb436"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e2170717-9f31-495c-a9cc-260b2ca1aec8"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""966ab0fb-ade8-48f5-9877-b365a92ae28b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7ee9c9a-7cb8-4355-aa62-ba219fa9aee9"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db1416b9-6157-40af-a6c7-1a028c61ece8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b98a492-a4c0-4294-a585-b2f0304e5c0e"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1083cc2-46a0-4c3e-86ba-4e7fe4dbc7af"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4895f0c-ba8d-4401-a66e-3a7481753a5e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74b05f88-1258-425d-ae76-197da3112575"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61dadc4c-b4c4-49c7-addf-f384c1a17a79"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d91c78d-031f-4065-af8d-b362175fe137"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MenuInput
        m_MenuInput = asset.FindActionMap("MenuInput", throwIfNotFound: true);
        m_MenuInput_ScrollDown = m_MenuInput.FindAction("ScrollDown", throwIfNotFound: true);
        m_MenuInput_ScrollLeft = m_MenuInput.FindAction("ScrollLeft", throwIfNotFound: true);
        m_MenuInput_ScrollUp = m_MenuInput.FindAction("ScrollUp", throwIfNotFound: true);
        m_MenuInput_ScrollRight = m_MenuInput.FindAction("ScrollRight", throwIfNotFound: true);
        m_MenuInput_Select = m_MenuInput.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MenuInput
    private readonly InputActionMap m_MenuInput;
    private IMenuInputActions m_MenuInputActionsCallbackInterface;
    private readonly InputAction m_MenuInput_ScrollDown;
    private readonly InputAction m_MenuInput_ScrollLeft;
    private readonly InputAction m_MenuInput_ScrollUp;
    private readonly InputAction m_MenuInput_ScrollRight;
    private readonly InputAction m_MenuInput_Select;
    public struct MenuInputActions
    {
        private @MainMenuInput m_Wrapper;
        public MenuInputActions(@MainMenuInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ScrollDown => m_Wrapper.m_MenuInput_ScrollDown;
        public InputAction @ScrollLeft => m_Wrapper.m_MenuInput_ScrollLeft;
        public InputAction @ScrollUp => m_Wrapper.m_MenuInput_ScrollUp;
        public InputAction @ScrollRight => m_Wrapper.m_MenuInput_ScrollRight;
        public InputAction @Select => m_Wrapper.m_MenuInput_Select;
        public InputActionMap Get() { return m_Wrapper.m_MenuInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuInputActions set) { return set.Get(); }
        public void SetCallbacks(IMenuInputActions instance)
        {
            if (m_Wrapper.m_MenuInputActionsCallbackInterface != null)
            {
                @ScrollDown.started -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollDown;
                @ScrollDown.performed -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollDown;
                @ScrollDown.canceled -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollDown;
                @ScrollLeft.started -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollLeft;
                @ScrollLeft.performed -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollLeft;
                @ScrollLeft.canceled -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollLeft;
                @ScrollUp.started -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollUp;
                @ScrollUp.performed -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollUp;
                @ScrollUp.canceled -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollUp;
                @ScrollRight.started -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollRight;
                @ScrollRight.performed -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollRight;
                @ScrollRight.canceled -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnScrollRight;
                @Select.started -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_MenuInputActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_MenuInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ScrollDown.started += instance.OnScrollDown;
                @ScrollDown.performed += instance.OnScrollDown;
                @ScrollDown.canceled += instance.OnScrollDown;
                @ScrollLeft.started += instance.OnScrollLeft;
                @ScrollLeft.performed += instance.OnScrollLeft;
                @ScrollLeft.canceled += instance.OnScrollLeft;
                @ScrollUp.started += instance.OnScrollUp;
                @ScrollUp.performed += instance.OnScrollUp;
                @ScrollUp.canceled += instance.OnScrollUp;
                @ScrollRight.started += instance.OnScrollRight;
                @ScrollRight.performed += instance.OnScrollRight;
                @ScrollRight.canceled += instance.OnScrollRight;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public MenuInputActions @MenuInput => new MenuInputActions(this);
    public interface IMenuInputActions
    {
        void OnScrollDown(InputAction.CallbackContext context);
        void OnScrollLeft(InputAction.CallbackContext context);
        void OnScrollUp(InputAction.CallbackContext context);
        void OnScrollRight(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
